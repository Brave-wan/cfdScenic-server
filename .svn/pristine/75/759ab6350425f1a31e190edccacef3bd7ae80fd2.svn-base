package com.htkj.cfdScenic.app.service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.htkj.cfdScenic.app.dao.AdvertisementDao;
import com.htkj.cfdScenic.app.dao.GoodsOrderDao;
import com.htkj.cfdScenic.app.dao.HotelOrderDao;
import com.htkj.cfdScenic.app.dao.OrderPersonDao;
import com.htkj.cfdScenic.app.dao.PictureLibraryDao;
import com.htkj.cfdScenic.app.dao.RestaurantOrderDao;
import com.htkj.cfdScenic.app.dao.ShopCartDao;
import com.htkj.cfdScenic.app.dao.ShopGoodsDao;
import com.htkj.cfdScenic.app.dao.ShopInformationDao;
import com.htkj.cfdScenic.app.dao.ShopsGroupDao;
import com.htkj.cfdScenic.app.dao.UserAccountDao;
import com.htkj.cfdScenic.app.dao.UserAddressDao;
import com.htkj.cfdScenic.app.dao.VisitorsProfilesDao;
import com.htkj.cfdScenic.app.model.GoodsOrder;
import com.htkj.cfdScenic.app.model.HotelOrder;
import com.htkj.cfdScenic.app.model.OrderPerson;
import com.htkj.cfdScenic.app.model.RestaurantOrder;
import com.htkj.cfdScenic.app.model.ShopCart;
import com.htkj.cfdScenic.app.model.ShopInformation;
import com.htrj.common.page.DataGrid;
import com.htrj.common.page.Page;
import com.htrj.common.page.PageRequest;

@Service
@Transactional
public class EShopService {
	
	@Autowired
	private ShopGoodsDao shopGoodsDao;
	
	@Autowired
	private ShopInformationDao shopInformationDao;
	
	@Autowired
	private AdvertisementDao advertisementDao;
	
	@Autowired
	private ShopsGroupDao shopsGroupDao;
	
	@Autowired
	private ShopCartDao shopCartDao;
	
	@Autowired
	private PictureLibraryDao pictureLibraryDao;
	
	@Autowired
	private VisitorsProfilesDao visitorsProfilesDao;
	
	@Autowired
	private UserAddressDao userAddressDao;
	
	@Autowired
	private GoodsOrderDao goodsOrderDao;
	
	@Autowired
	private HotelOrderDao hotelOrderDao;
	
	@Autowired
	private OrderPersonDao orderPersonDao;
	
	@Autowired
	private RestaurantOrderDao restaurantOrderDao;
	
	@Autowired
	private UserAccountDao userAccountDao;
	
	/**
	 * 模糊查询商品表和商户信息
	 */
	public Map<String, List<Map<String, String>>> linkSelect(String keyWord){
		List<Map<String,String>> shopGoodsMap = new ArrayList<Map<String,String>>();
		List<Map<String,String>> shopUserMap = new ArrayList<Map<String,String>>();
		Map<String,List<Map<String,String>>> returnMap = new HashMap<String,List<Map<String,String>>>();
		try {
			shopGoodsMap = shopGoodsDao.linkSelect(keyWord);
			shopUserMap = shopInformationDao.linkSelect(keyWord);
			
			returnMap.put("shopGoodsMap", shopGoodsMap);
			returnMap.put("shopUserMap", shopUserMap);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return returnMap;
	}
	/**
	 * 查询轮播图
	 */
	public List<Map<String, String>> findPic(){
		List<Map<String, String>> picList = advertisementDao.findPic();
		return picList;
	}
	/**
	 * 为你推荐
	 */
	public List<Map<String, Object>> selectRecommend(){
		List<Map<String,Object>> list = shopGoodsDao.selectRecommend();
		return list;
	}
	/**
	 * 查询全部分类
	 * 先查出来所有的分类，在按照分类的Id查询店铺
	 */
	public List<Map<String, Object>> getType(){
		List<Map<String,Object>> list = new ArrayList<Map<String,Object>>();
		try {
			list = shopsGroupDao.getType();
			for(int i=0;i<list.size();i++){
				list.get(i).put(String.valueOf(list.get(i).get("name")),shopInformationDao.selectByShopId(String.valueOf(list.get(i).get("id"))));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	/**
	 * 根据id查询店铺信息
	 */
	public Map selectById(Long id) {
		return shopInformationDao.selectById(id);
	}
	/**
	 * 根据userId查询购物车
	 */
	public List getShopCartByUserId(Long userId) {
		return shopCartDao.getShopCartByUserId(userId);
	}
	
	public List getShopCartGoodsByUserId(Long userId){
		List list = shopCartDao.getShopCartShopGroupByUserId(userId);
		for(int i =0; i<list.size(); i++){
			HashMap map = (HashMap) list.get(i);
			List goodsList = shopCartDao.getShopCartGoodsByUserId(map);
			map.put("goodsList", goodsList);
		}
		return list;
	}
	
	public void deleteShopCartById(String ids) {
		shopCartDao.deleteShopCartById(ids);
	}
	public DataGrid selectShopInformation(PageRequest<Map<String, Object>> pageRequest) {
		Page returnPage = shopInformationDao.selectShopInformation(pageRequest);
		DataGrid dataGrid=DataGrid.pageToDataGrid(returnPage);
		return dataGrid;
	}
	/**
	 * 新 - 分页查询
	 * @param parameter 
	 */
	public List<Map<String,Object>> selectShopInformationPage(Map parameter) {
		return shopInformationDao.selectShopInformationPage(parameter);
	}
	public DataGrid selectShopGoodsByInformationId(PageRequest<Map<String, Object>> pageRequest) {
		Page returnPage = shopGoodsDao.selectShopGoodsByInformationId(pageRequest);
		DataGrid dataGrid=DataGrid.pageToDataGrid(returnPage);
		return dataGrid;
	}
	/**
	 * 新 - 分页查询
	 */
	public List<Map<String,Object>> selectShopGoodsByInformationIdPage(Map parameter) {
		return shopGoodsDao.selectShopGoodsByInformationIdPage(parameter);
	}
	
	public Map findDetailByGoodsId(Long goodsId) {
		return shopGoodsDao.findDetailByGoodsId(goodsId);
	}
	/**
	 * 通过商品Id和用户获取商品及关注状态
	 */
	public Map findDetailByGoodsIdAndUid(Map map) {
		return shopGoodsDao.findDetailByGoodsIdAndUid(map);
	}
	public List getPicById(Long goodsId) {
		return pictureLibraryDao.getPicById(goodsId);
	}
	public String getContentUrlById(Long goodsId) {
		return visitorsProfilesDao.getContentUrlById(goodsId);
	}
	public void saveShopCart(ShopCart shopCart) {
		shopCartDao.saveShopCart(shopCart);
	}
	public void updateShopCart(Long id, Integer number) {
		Map map = new HashMap();
		map.put("id",id);
		map.put("number", number);
		shopCartDao.updateShopCart(map);
	}
	public Map getUserAdderssByUserId(Long userId) {
		return userAddressDao.getUserAdderssByUserId(userId);
	}
	public void saveGoodsOrder(GoodsOrder goodsOrder){
		goodsOrderDao.saveGoodsOrder(goodsOrder);
	}
	public List findGoodsOrderById(Map map) {
		return goodsOrderDao.findGoodsOrderById(map);
	}
	public DataGrid findHotel(PageRequest<Map<String, Object>> pageRequest) {
		Page returnPage = shopInformationDao.findHotel(pageRequest);
		DataGrid dataGrid=DataGrid.pageToDataGrid(returnPage);
		return dataGrid;
	}
	public List<Map<String,Object>> findHotelPage(Map map) {
		return shopInformationDao.findHotelPage(map);
	}
	//通过店铺的id查询所有的商品信息
	public List<Map<String,Object>> findHotelGoodsById(Long id) {
		return shopGoodsDao.findHotelGoodsById(id);
	}
	//通过店铺的Id查询轮播图
	public List findHotelPicBy(Long id) {
		return pictureLibraryDao.findHotelPicBy(id);
	}
	public void saveHotelOrder(HotelOrder hotelOrder) {
		hotelOrderDao.saveHotelOrder(hotelOrder);
	}
	//获取单个商品的详情
	public Map findHotelGoodsDetail(Long goodsId) {
		return shopGoodsDao.findHotelGoodsDetail(goodsId);
	}
	public void saveOrderPerson(OrderPerson orderPerson) {
		orderPersonDao.saveOrderPerson(orderPerson);
	}
	public Map getHotelOrder(Long gotelOrderId) {
		return hotelOrderDao.getHotelOrder(gotelOrderId);
	}
	public int getCountNumberHotelOrder(Map map) {
		return hotelOrderDao.getCountNumberHotelOrder(map);
	}
	public int getstockNumber(Long shopGoodsId) {
		return shopGoodsDao.getstockNumber(shopGoodsId);
	}
	public DataGrid findAllRestaurant(PageRequest<Map<String, Object>> pageRequest) {
		Page returnPage = shopInformationDao.findAllRestaurant(pageRequest);
		DataGrid dataGrid=DataGrid.pageToDataGrid(returnPage);
		return dataGrid;
	}
	/**
	 * 新分页查询
	 */
	public List<Map<String,Object>> findAllRestaurantPage(Map map) {
		return shopInformationDao.findAllRestaurantPage(map);
		
	}
	public Map findAllRestaurantDetail(Long id) {
		return shopInformationDao.findAllRestaurantDetail(id);
	}
	public void saveRestaurantOrder(RestaurantOrder restaurantOrder) {
		restaurantOrderDao.saveRestaurantOrder(restaurantOrder);
	}
	public Map selectRestaurantOrderById(Long id) {
		return restaurantOrderDao.selectRestaurantOrderById(id);
	}
	/**
	 * 修改饭店订单的状态
	 */
	public void updateRestaurantOrder(Map map) {
		restaurantOrderDao.updateRestaurantOrder(map);
	}
	
	public void updateGoodsOrder(Map map) {
		goodsOrderDao.updateGoodsOrder(map);
	}
	
	public void updateHotelOrder(Map map) {
		hotelOrderDao.updateHotelOrder(map);
	}
	/**
	 * 	取消订单修改订单状态 
	 */
	public void updateUndoRestaurantOrder(Long id) {
		restaurantOrderDao.updateUndoRestaurantOrder(id);
	}
	public void updateUndoGoodsOrder(Long id) {
		goodsOrderDao.updateUndoGoodsOrder(id);
	}
	public void updateUndoHotelOrder(Long id) {
		hotelOrderDao.updateUndoHotelOrder(id);
	}
	public List<Map> getHotGoods() {
		return shopGoodsDao.getHotGoods();
	}
	public DataGrid findAllSnack(PageRequest<Map<String, Object>> pageRequest) {
		Page returnPage = shopInformationDao.findAllSnack(pageRequest);
		DataGrid dataGrid=DataGrid.pageToDataGrid(returnPage);
		return dataGrid;
	}
	/**
	 * 分页 - 小吃列表分页2
	 */
	public List<Map<String,Object>> findAllSnackPage(Map map) {
		return shopInformationDao.findAllSnackPage(map);
	}
	public Integer getOrderNumberByGoodsId(Map paraMap) {
		return shopGoodsDao.getOrderNumberByGoodsId(paraMap);
	}
	public BigDecimal getHotelOrderById(Long hotelOrderId) {
		return hotelOrderDao.getHotelOrderById(hotelOrderId);
	}
	public void updateUserAccountByUserId(Map map) {
		userAccountDao.updateUserAccountByUserId(map);
	}
	public void updateHotelOrderByMap(Map map) {
		hotelOrderDao.updateHotelOrderByMap(map);
	}
	public BigDecimal getUserAccount(Long userId) {
		return userAccountDao.getUserAccount(userId);
	}
}
