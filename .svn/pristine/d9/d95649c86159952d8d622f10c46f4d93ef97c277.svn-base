<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htkj.cfdScenic.app.dao.RestaurantOrderDao">
<resultMap type="com.htkj.cfdScenic.app.model.RestaurantOrder" id="RestaurantOrder">
<id property="id" column="id"/>
<result property="name" column="name"/>
<result property="orderDescribe" column="order_describe"/>
<result property="price" column="price"/>
<result property="eatDate" column="eat_date"/>
<result property="quantity" column="quantity"/>
<result property="payWay" column="pay_way"/>
<result property="payState" column="payState"/>
<result property="orderState" column="order_state"/>
<result property="createTime" column="create_time"/>
<result property="payTime" column="pay_time"/>
<result property="refundTime" column="refund_time"/>
<result property="userId" column="user_id"/>
<result property="realPrice" column="real_price"/>
<result property="orderCode" column="order_code"/>
<result property="isComment" column="is_comment"/>
<result property="goodsId" column="goods_id"/>
<result property="shopInformationId" column="shop_information_id"/>
<result property="telphone" column="telphone"/>
<result property="goodsType" column="goods_type"/>
<result property="isBalance" column="is_balance"/>
<result property="isDelete" column="is_delete"/>
</resultMap>
	<insert id="saveRestaurantOrder" parameterType="com.htkj.cfdScenic.app.model.RestaurantOrder">
		insert into restaurant_order(
			id,
			name,
			order_describe,
			price,
			eat_date,
			quantity,
			pay_way,
			pay_state,
			order_state,
			create_time,
			user_id,
			real_price,
			order_code,
			is_comment,
			goods_id,
			shop_information_id,
			telphone,
			goods_type,
			is_balance,
			is_delete
		)values(
			#{id,jdbcType=NUMERIC},
			#{name,jdbcType=VARCHAR},
			#{orderDescribe,jdbcType=VARCHAR},
			#{price},
			#{eatDate},
			#{quantity},
			#{payWay},
			#{payState},
			#{orderState},
			#{createTime},
			#{userId},
			#{realPrice},
			#{orderCode},
			#{isComment},
			#{goodsId},
			#{shopInformationId},
			#{telphone},
			#{goodsType},
			#{isBalance},
			#{isDelete}
		)
	</insert>
	<select id="selectRestaurantOrderById" parameterType="long" resultType="map">
		select 
			ro.id,
			ro.goods_type,
			ro.name as orderName,
			si.name,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			sum(ro.quantity) as quantity,
			sum(ro.real_price) as real_price,
			ro.price,
			ro.order_code,
			ua.balance
		from
			restaurant_order ro left join shop_information si on ro.shop_information_id = si.id left join user_account ua on ro.user_id = ua.user_id
		where
			ro.order_code = #{orderCode,jdbcType=VARCHAR}		
	</select>
	<update id="updateRestaurantOrder" parameterType="map">
		update restaurant_order set order_state = 3 AND pay_way = #{payWay} AND pay_time = #{payTime} AND pay_state = 1 where order_code = #{orderCode} 
	</update>	
	<update id="updateUndoRestaurantOrder" parameterType="long">
		update restaurant_order set order_state = 2  where id = #{id} 
	</update>
	<select id="findRestaurantOrder" parameterType="map" resultType="map">
		SELECT
			ro.id,
			ro.name,
			ro.order_describe,
			ro.real_price,
			ro.goods_type,
			ro.order_code,
			ro.order_state,
			ro.pay_state,
			sg.describe_img,
			ro.goods_type,
			si.name as informationName
		FROM
			restaurant_order ro LEFT JOIN shop_goods sg ON ro.goods_id = sg.id left join shop_information si on ro.shop_information_id = si.id
		WHERE
			ro.user_id = #{userId,jdbcType=NUMERIC} AND ro.is_delete = 0  AND ro.pay_state in (${payState}) AND ro.order_state in (${orderState}) order by ro.create_time limit #{page},#{rows}
	</select>
	
	<select id="findRestaurantOrderDetail" parameterType="long" resultType="map">
		SELECT
			sg.id,
			sg.describe_img,
			ro.id,
			ro.name,
			ro.order_describe,
			ro.price,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.quantity,
			ro.pay_way,
			ro.pay_state,
			ro.order_state,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			DATE_FORMAT(ro.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(ro.refund_time,'%Y-%m-%d %H:%i:%s') AS refund_time,
			ro.user_id,
			ro.real_price,
			ro.order_code,
			ro.is_comment,
			ro.goods_id,
			ro.shop_information_id,
			ro.telphone,
			ro.goods_type,
			ro.is_balance,
			u.nick_name,u.head_img
		FROM 
			restaurant_order ro LEFT JOIN shop_goods sg ON ro.goods_id = sg.id left join consumer_user u on ro.user_id=u.id
		WHERE
			ro.order_code = #{orderId,jdbcType=NUMERIC}
	</select>
	<update id="restaurantBackMoney" parameterType="map">
		UPDATE restaurant_order SET order_state = #{orderState} WHERE order_code = #{orderCode}
		<if test="siId != null and siId != ''">
		and shop_information_id = ${siId}
		</if>	
	</update>	
	
	
	<select id="findOrderList" parameterType="map" resultType="map">
		SELECT
			ro.id,
			ro.name,
			ro.order_describe,
			ro.real_price,
			ro.goods_type,
			ro.order_code,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.order_state,
			ro.pay_state,
			sg.describe_img,
			u.nick_name,
			u.head_img,
			ro.goods_type,
			rp.head_img,
			ro.quantity
		FROM
			restaurant_order ro left JOIN shop_goods sg ON ro.goods_id = sg.id left join consumer_user u on ro.user_id = u.id left join restaurant_package rp on ro.goods_id = rp.id 
		WHERE
			ro.order_state in (${status}) AND ro.goods_type = ${type} and ro.shop_information_id=#{sfId} and is_delete = 0
	</select>
	<select id="findOrderList_count" parameterType="map" resultType="int">
		SELECT
			count(1)  
		FROM
			restaurant_order ro JOIN shop_goods sg ON ro.goods_id = sg.id join consumer_user u on ro.user_id = u.id 
		WHERE
			ro.order_state in (${status}) AND ro.goods_type = ${type} and ro.shop_information_id=#{sfId}
	</select>
	
	
	
		<select id="selectOrderBycode" parameterType="map" resultType="map">
		SELECT
			ro.id,
			ro.name,
			ro.order_describe,
			ro.real_price,
			ro.goods_type,
			ro.order_code,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.order_state,
			ro.pay_state,
			sg.describe_img,
			u.nick_name,
			u.head_img 
		FROM
			restaurant_order ro JOIN shop_goods sg ON ro.goods_id = sg.id join consumer_user u on ro.user_id = u.id 
		WHERE
			ro.order_state in (3,5,6)  and ro.shop_information_id=#{sfId} and (ro.order_code like  CONCAT('%',#{codeOrname,jdbcType=VARCHAR},'%' ) or u.nick_name like  CONCAT('%',#{codeOrname,jdbcType=VARCHAR},'%' ) )
	</select>
	
	
	
	
	<select id="findOrder" parameterType="String" resultMap="RestaurantOrder">
		SELECT 
		*  
		FROM
			restaurant_order  
		WHERE
			order_code = #{orderCode}
	</select>
	
	<update id="updateState" parameterType="map">
		update restaurant_order set order_state = 2,is_delete = 1 where order_code = ${orderCode} and shop_information_id = ${siId}
	</update>
	<delete id="deleteState" parameterType="map">
		delete from restaurant_order where order_code = ${orderCode} and shop_information_id = ${siId}
	</delete>
	
	<update id="updateOrderState" parameterType="com.htkj.cfdScenic.app.model.RestaurantOrder">
		update restaurant_order set order_state = #{orderState} where order_code = #{orderCode}
	</update>
	<select id="getRestaurantOrderByOrderId" parameterType="long" resultType="com.htkj.cfdScenic.app.model.RestaurantOrder">
		select * from restaurant_order where id = #{id}
	</select>
	<update id="updateRestaurantOrderState" parameterType="map">
		update restaurant_order set
			pay_way = ${payWay},
			pay_state = 1,
			order_state = 2,
			pay_time = now()
		where order_code = ${id}
	</update>
	<delete id="deleteRestaurantOrder" parameterType="long">
		delete from restaurant_order where order_code = #{orderCode}
	</delete>
	<update id="updateRestaurantOrderByOrderCode" parameterType="long">
		update restaurant_order set is_delete = 1  where order_code = #{orderCode}
	</update>
	<select id="informationRestaurantOrderDetail" parameterType="map" resultType="map">
		SELECT
			sg.id,
			sg.describe_img,
			ro.id,
			ro.name,
			ro.order_describe,
			ro.price,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.quantity,
			ro.pay_way,
			ro.pay_state,
			ro.order_state,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			DATE_FORMAT(ro.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(ro.refund_time,'%Y-%m-%d %H:%i:%s') AS refund_time,
			ro.user_id,
			ro.real_price,
			ro.order_code,
			ro.is_comment,
			ro.goods_id,
			ro.shop_information_id,
			ro.telphone,
			ro.goods_type,
			ro.is_balance,
			u.nick_name,u.head_img
		FROM 
			restaurant_order ro LEFT JOIN shop_goods sg ON ro.goods_id = sg.id left join consumer_user u on ro.user_id=u.id
		WHERE
			ro.order_code = ${orderId} and ro.shop_information_id = ${informationId}
	</select>
	<select id="getOrderDetailByShop" parameterType="map" resultType="map">
		SELECT
			sg.id,
			sg.describe_img,
			ro.id,
			ro.name,
			ro.order_describe,
			ro.price,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.quantity,
			ro.pay_way,
			ro.pay_state,
			ro.order_state,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			DATE_FORMAT(ro.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(ro.refund_time,'%Y-%m-%d %H:%i:%s') AS refund_time,
			ro.user_id,
			ro.real_price,
			ro.order_code,
			ro.is_comment,
			ro.goods_id,
			ro.shop_information_id,
			ro.telphone,
			ro.goods_type,
			ro.is_balance,
			u.nick_name,u.head_img
		FROM 
			restaurant_order ro LEFT JOIN shop_goods sg ON ro.goods_id = sg.id left join consumer_user u on ro.user_id=u.id
		WHERE
			ro.order_code = ${orderCode} and ro.shop_information_id = ${siId}
	</select>
	<select id="getRestaurantOrderByOrderCode" parameterType="map" resultType="map">
		select 
			rp.id,
			rp.goods_ids,
			ro.id,
			ro.name,
			ro.order_describe,
			ro.price,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.quantity,
			ro.pay_way,
			ro.pay_state,
			ro.order_state,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			DATE_FORMAT(ro.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(ro.refund_time,'%Y-%m-%d %H:%i:%s') AS refund_time,
			ro.user_id,
			ro.real_price,
			ro.order_code,
			ro.is_comment,
			ro.goods_id,
			ro.shop_information_id,
			ro.telphone,
			ro.goods_type,
			ro.is_balance
		from 
			restaurant_order ro left join restaurant_package rp on ro.goods_id = rp.id
		where ro.shop_information_id = ${siId} and ro.order_code = ${orderCode}
	</select>
	<select id="shopFindRestaurantOrder" parameterType="map" resultType="map">
		SELECT
			sg.id,
			sg.describe_img,
			ro.id,
			ro.name,
			ro.order_describe,
			ro.price,
			DATE_FORMAT(ro.eat_date,'%Y-%m-%d %H:%i:%s') AS eat_date,
			ro.quantity,
			ro.pay_way,
			ro.pay_state,
			ro.order_state,
			DATE_FORMAT(ro.create_time,'%Y-%m-%d %H:%i:%s') AS create_time,
			DATE_FORMAT(ro.pay_time,'%Y-%m-%d %H:%i:%s') AS pay_time,
			DATE_FORMAT(ro.refund_time,'%Y-%m-%d %H:%i:%s') AS refund_time,
			ro.user_id,
			ro.real_price,
			ro.order_code,
			ro.is_comment,
			ro.goods_id,
			ro.shop_information_id,
			ro.telphone,
			ro.goods_type,
			ro.is_balance,
			u.nick_name,u.head_img
		FROM 
			restaurant_order ro LEFT JOIN shop_goods sg ON ro.goods_id = sg.id left join consumer_user u on ro.user_id=u.id
		WHERE
			ro.order_state = ${orderState} and ro.shop_information_id = ${siId}
	</select>
	
</mapper>