package com.htkj.cfdScenic.app.controller;

import com.htkj.cfdScenic.app.model.ShopUser;
import com.htkj.cfdScenic.app.model.SysVerification;
import com.htkj.cfdScenic.app.service.ShopUserService;
import com.htkj.cfdScenic.app.service.SysVerificationService;
import com.htrj.common.base.BaseController;
import com.htrj.common.exception.BusinessException;
import com.htrj.common.page.Json;
import com.htrj.common.resources.CommonStrings;
import com.htrj.common.utils.CalendarHelper;
import com.htrj.common.utils.GenerateSequenceUtil;
import org.apache.shiro.crypto.hash.Md5Hash;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Date;

/**
 * @author wangfenglong
 * @date 2016/9/29 002910:37.
 */
@Controller
@RequestMapping("/ShopUserPcController")
public class ShopUserPcController extends BaseController {

    @Autowired
    private ShopUserService shopUserService;

    @Autowired
    private SysVerificationService sysVerificationService;

    /**
     * 商家 PC 登录
     * @param telephone
     * @param password
     * @param model
     * @return
     */
    @RequestMapping("/login")
    public String login(String telephone , String password , ModelMap model ){
        String view;
        ShopUser user = null;
        if (webContext.isAuthorized()) {
            user = (ShopUser) webContext.getSessionUser();
            view = CommonStrings.VIEW_PC_INDEX;
            //} else if (telephone == null || password == null || yz == null || "".equals(yz) || "".equals(telephone.trim()) || "".equals(password.trim())) {
            //    view = CommonStrings.VIEW_PC_LOGIN;
        } else {
            try {
                //if (!(yz.equalsIgnoreCase(session.getAttribute("code").toString()))) {
                //    view = CommonStrings.VIEW_PC_LOGIN;
                //    model.put("showMsg","验证码输入有误！");
                //} else {
                user = shopUserService.login(telephone,password);
                if (user != null) {
                    webContext.setSessionUser(user);
                    view = CommonStrings.VIEW_PC_INDEX;
                } else {
                    view = CommonStrings.VIEW_PC_LOGIN;
                    model.put("showMsg","用户不存在！");
                }
                //}
            } catch (BusinessException e) {
                model.put("showMsg" , e.getMessage());
                view = CommonStrings.VIEW_PC_LOGIN;
            }
        }
        if (view.equals(CommonStrings.VIEW_PC_INDEX)) {
            model.put("user" , user);
        }

        return view;
    }


    /**
     * 注册
     * @param shopUser
     * @return
     */
    @RequestMapping("/register")
    @ResponseBody
    public Json register(ShopUser shopUser , String code ) {
        Json json = new Json();
        try {
            SysVerification message = sysVerificationService.getMessage(shopUser.getTelPhone());
            if (!(message.getVerification().equals(code))) {
                json.setSuccess(true);
                json.setCode(0); //验证码错误
            } else {
                String password = new Md5Hash(shopUser.getPassWord()).toHex();
                shopUser.setPassWord(password);
                shopUser.setId(GenerateSequenceUtil.getUniqueId());
                shopUser.setCreateTime(CalendarHelper.format(new Date(),"yyyy-MM-dd HH:mm:ss"));
                shopUser.setState(0);//0:正常  1:停用  2:删除
                shopUserService.register(shopUser);
                json.setSuccess(true);
                json.setCode(1); //注册成功
            }
        } catch (Exception e) {
        	e.printStackTrace();
        }

        return json;
    }


    /**
     * 判断手机号是否已经被注册
     * @param telphone
     * @return
     */
    @RequestMapping("/isExist")
    @ResponseBody
    public Json isExist(String telphone) {
        Json json = new Json();
        try {
            Boolean flag = shopUserService.selectByTelPhone(telphone);
            json.setSuccess(flag);
        } catch (Exception e) {
        	e.printStackTrace();
        }
        return json;
    }
}
