<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htkj.cfdScenic.app.dao.HotelOrderDao">
	<insert id="saveHotelOrder" parameterType="com.htkj.cfdScenic.app.model.HotelOrder">
		insert into hotel_order(
				id,
				name,
				order_describe,
				telphone,
				price,
				start_date,
				end_date,
				quantity,
				pay_way,
				pay_state,
				order_state,
				create_time,
				user_id,
				real_price,
				order_code,
				is_comment,
				goods_id,
				shop_information_id,
				check_days,
				is_balance
		)values(
				#{id,jdbcType=NUMERIC},
				#{name,jdbcType=VARCHAR},
				#{orderDescribe,jdbcType=VARCHAR},
				#{telphone,jdbcType=VARCHAR},
				#{price,jdbcType=NUMERIC},
				#{startDate},
				#{endDate},
				#{quantity,jdbcType=NUMERIC},
				#{payWay,jdbcType=NUMERIC},
				#{payState,jdbcType=NUMERIC},
				#{orderState,jdbcType=NUMERIC},
				#{createTime},
				#{userId,jdbcType=NUMERIC},
				#{realPrice},
				#{orderCode,jdbcType=VARCHAR},
				#{isComment,jdbcType=NUMERIC},
				#{goodsId,jdbcType=NUMERIC},
				#{shopInformationId,jdbcType=NUMERIC},
				#{checkDays,jdbcType=NUMERIC},
				#{isBalance,jdbcType=NUMERIC}
		)
	</insert>
	<select id="getHotelOrder" parameterType="long" resultType="map"> 
		select 
			ho.id,
			ho.price,
			ho.name,
			DATE_FORMAT(ho.start_date,'%Y-%m-%d %h:%i:%s') AS start_date,
			DATE_FORMAT(ho.end_date,'%Y-%m-%d %h:%i:%s') AS end_date,
			ho.quantity,
			ho.real_price,
			ho.order_code,
			ho.check_days,
			si.name,
			group_concat(op.name) as personName
		from 
			hotel_order ho join shop_information si on ho.shop_information_id = si.id join order_person op on op.hotel_order_id = ho.id 
		where
			ho.id = #{gotelOrderId}
	</select>	
	<select id="getCountNumberHotelOrder" parameterType="long" resultType="int">
		select
			sum(quantity)
		from 
			hotel_order
		where 
			goods_id = #{shopGoodsId} and (order_state = 0 or order_state = 1 or order_state=2 or order_state =3) AND
			((end_date &gt;= #{startDate} AND start_date &lt;= #{endDate} ) OR (start_date &gt;= #{startDate} AND start_date &lt;= #{endDate}))
	</select>
	<update id="updateHotelOrder" parameterType="map">
		update hotel_order set order_state = 3 AND pay_way = #{payWay} AND pay_time = #{payTime} AND pay_state = 1 where id = #{id} 
	</update>	
	<update id="updateUndoHotelOrder" parameterType="long">
		update hotel_order set order_state = 2 where id = #{id} 
	</update>	
	<!-- 酒店订单 -->
	<select id="findHotelOrder" parameterType="map" resultType="map">
		SELECT
			ho.id,
			ho.name,
			ho.order_describe,
			ho.price,
			DATE_FORMAT(ho.start_date,'%Y-%m-%d %h:%i:%s') AS start_date,
			DATE_FORMAT(ho.end_date,'%Y-%m-%d %h:%i:%s') AS end_date,
			ho.real_price,
			ho.order_code,
			ho.order_state,
			ho.pay_state,
			sg.describe_img
		FROM
			hotel_order ho JOIN shop_goods sg ON ho.goods_id = sg.id
		WHERE
			ho.user_id = #{userId,jdbcType=NUMERIC} AND ho.pay_state in (${payState}) AND ho.order_state in (${orderState})	limit #{page},#{rows}		
	</select>
	
	<select id="findHotelOrderDetail" parameterType="long" resultType="map"> 
		SELECT
			sg.describe_img,
			sg.goods_name,
			group_concat(op.name) as personName,
			ho.id,
			ho.name,
			ho.order_describe,
			ho.telphone,
			ho.price,
			DATE_FORMAT(ho.start_date,'%Y-%m-%d %h:%i:%s') AS start_date,
			DATE_FORMAT(ho.end_date,'%Y-%m-%d %h:%i:%s') AS end_date,
			ho.quantity,
			ho.pay_way,
			ho.pay_state,
			ho.order_state,
			DATE_FORMAT(ho.create_time,'%Y-%m-%d %h:%i:%s') AS create_time,
			DATE_FORMAT(ho.pay_time,'%Y-%m-%d %h:%i:%s') AS pay_time,
			DATE_FORMAT(ho.refund_time,'%Y-%m-%d %h:%i:%s') AS refund_time,
			ho.user_id,
			ho.real_price,
			ho.order_code,
			ho.is_comment,
			ho.goods_id,
			ho.check_days,
			ho.is_balance,u.nick_name,u.head_img
		FROM
			hotel_order ho JOIN shop_goods sg ON ho.goods_id = sg.id JOIN order_person op ON op.hotel_order_id = ho.id join consumer_user u on ho.user_id = u.id  
		WHERE
			ho.id=#{orderId,jdbcType=NUMERIC}
	</select>
	<update id="hotelBackMoney" parameterType="map">
		UPDATE hotel_order SET order_state = #{orderState} WHERE id = #{id}
	</update>
	
	<select id="findOrderList" resultType="map" parameterType="map">
		select 
		ho.id,
		ho.name,
		ho.quantity,
		DATE_FORMAT(ho.start_date,'%Y-%m-%d %h:%i:%s') AS start_date,
		DATE_FORMAT(ho.end_date,'%Y-%m-%d %h:%i:%s') AS end_date,
		ho.price,
		ho.real_price,
		ho.order_code,
		ho.check_days,
		sg.describe_img,
		u.id as consumerId,
		u.nick_name,
		u.head_img,
		ho.order_state
		from hotel_order ho left JOIN shop_goods sg ON ho.goods_id = sg.id  left join consumer_user u on ho.user_id = u.id 
		where order_state in (#{status}) and ho.shop_information_id=#{sfId}
	</select>
	
	<select id="findOrderList_count" resultType="int" parameterType="map">
		select 
		count(1)   
		from hotel_order where order_state in (#{status}) and shop_information_id=#{sfId}
	</select>
	
	
	
	<select id="selectOrderBycode" resultType="map" parameterType="map">
		select 
		ho.id,
		ho.name,
		ho.quantity,
		DATE_FORMAT(ho.start_date,'%Y-%m-%d %h:%i:%s') AS start_date,
		DATE_FORMAT(ho.end_date,'%Y-%m-%d %h:%i:%s') AS end_date,
		ho.price,
		ho.real_price,
		ho.order_code,
		ho.check_days,
		sg.describe_img,
		u.id as consumerId,
		u.nick_name,
		u.head_img,
		ho.order_state
		from hotel_order ho left JOIN shop_goods sg ON ho.goods_id = sg.id  left join consumer_user u on ho.user_id = u.id 
		where ho.shop_information_id=#{sfId}  and (ho.order_code like  CONCAT('%',#{codeOrname,jdbcType=VARCHAR},'%' ) or u.nick_name like  CONCAT('%',#{codeOrname,jdbcType=VARCHAR},'%' ) ) and ho.order_state in(3,5,6)
	</select>
	
	
	
	<select id="findOrder" resultType="com.htkj.cfdScenic.app.model.HotelOrder" parameterType="String">
		select * from hotel_order where order_code = #{orderCode}
	</select>
	
	<delete id="deleteMessage" parameterType="String">
		delete from hotel_order where order_code = #{orderCode}
	</delete>
	
	<update id="updateOrderState" parameterType="com.htkj.cfdScenic.app.model.HotelOrder">
		UPDATE hotel_order SET order_state = #{orderState} WHERE order_Code = #{orderCode}
	</update>
	
	<update id="updateState">
		UPDATE hotel_order SET order_state = 2 WHERE orderCode = #{orderCode}
	</update>
	<select id="getHotelOrderById" parameterType="long" resultType="BigDecimal">
		select
			real_price
		from 
			hotel_order
		where
			id = #{hotelOrderId}
	</select>
	<update id="updateHotelOrderByMap" parameterType="map">
		update hotel_order set pay_time = #{payTime},pay_way = #{payWay},pay_state = 1,order_state = #{orderState} where id = #{id}
	</update>
</mapper>