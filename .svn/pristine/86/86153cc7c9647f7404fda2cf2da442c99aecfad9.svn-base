<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htkj.cfdScenic.app.dao.ShopGoodsDao">

<resultMap type="com.htkj.cfdScenic.app.model.ShopGoods" id="ShopGoods">
<id property="id" column="id"/>
<result property="goodsName" column="goods_name"/>
<result property="goodsDescribe" column="goodsDescribe"/>
<result property="newPrice" column="new_price"/>
<result property="stock" column="stock"/>
<result property="isRecomment" column="is_recomment"/>
<result property="isHot" column="is_hot"/>
<result property="state" column="state"/>
<result property="contentId" column="content_id"/>
<result property="shopInformationId" column="shop_information_id"/>
<result property="createTime" column="createtime"/>
<result property="describeImg" column="describe_img"/>
<result property="type" column="type"/>
</resultMap>

	<select id="linkSelect" parameterType="string" resultType="map">
		select 
			id,goods_name,type
		from
			shop_goods
		where 
			goods_name like CONCAT('%',#{keyWord,jdbcType=VARCHAR},'%') AND state = 0
	</select>
	
	<select id="selectRecommend" resultType="map">
		select
			id,
			goods_name,
			goods_describe,
			price,
			new_price,
			is_recomment,
			is_hot,
			content_id,
			shop_information_id,
			describe_img,
			type,
		    (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=s.id) as monthlySales
		from
			shop_goods s
		where
			state = 0 and is_recomment = 1					
	</select>
	
	<select id="selectShopGoodsByInformationId" parameterType="map" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.is_hot,
			sg.describe_img,
			sg.shop_information_id,
			sg.stock,
		    (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=sg.id) as monthlySales
		from
			shop_goods sg
		where
			sg.shop_information_id = #{informationId} and sg.state = 0 and sg.type = 3 group by sg.id
	</select>
	<select id="selectShopGoodsByInformationId_count" parameterType="map" resultType="int">
		select
			count(1)
		from
			shop_goods sg 
		where
			sg.shop_information_id = #{informationId} and sg.state = 0
	</select>
		<select id="selectShopGoodsByInformationIdPage" parameterType="map" resultType="map">
		select
			sg.id as shopGoodsId,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.is_hot,
			sg.describe_img,
			IFNULL(sum(go.quantity),0)as quantity
		from
			shop_goods sg left join goods_order go on go.goods_id = sg.id
		where
			sg.shop_information_id = #{informationId} and sg.state = 0 group by sg.id
			<if test="type!=null and type == 0">
				order by new_price asc
			</if>
			<if test="type!=null and type == 1">
				order by new_price desc
			</if>
			<if test="type!=null and type == 2">
				order by quantity
			</if>
			limit #{page},#{rows}
	</select>
	<select id="findDetailByGoodsId" parameterType="long" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.deliver_fee,
			sg.stock,
			sg.is_hot,
			sg.shop_information_id,
			sg.content_id,
		    (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=sg.id) as monthlySales,
			ht.html_url as detailUrl
		from
			shop_goods sg left join html_text ht on sg.content_id = ht.id
		where
			sg.id = #{goodsId}
	</select>
		<select id="findDetailByGoodsIdAndUid" parameterType="map" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.deliver_fee,
			sg.stock,
			sg.is_hot,
			sg.shop_information_id,
			sg.content_id,
			si.name as informationName,
			si.head_img,
		    (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=sg.id) as monthlySales,
			(select count(1) from user_collect c where c.goods_id=sg.id and c.type=0 and c.state=0 and c.user_id=#{uid}) as isCollect,
			ht.html_url as detailUrl
		from
			shop_goods sg left join html_text ht on sg.content_id = ht.id left join shop_information si on sg.shop_information_id = si.id
		where
			sg.id = #{goodsId}
	</select>
	<select id="findHotelGoodsDetail" parameterType="long" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.price,
			sg.new_price,
			sg.describe_img,
			si.name as hotel_name
		from
			shop_goods sg JOIN shop_information si ON sg.shop_information_id = si.id 
		where
			sg.id = #{id} AND sg.state = 0	
	</select>
	<select id="getstockNumber" parameterType="long" resultType="int">
		select 
			stock
		from
			shop_goods 
		where 
			id = #{shopGoodsId}	
	</select>
	<select id="selectMessage" resultType="map" parameterType="String">
		select 
			s.id,
			s.goods_name,
			s.goods_describe,
			s.price,
			s.new_price,
			s.describe_img 
		from
			shop_goods s
		where 
			s.goods_name LIKE CONCAT('%',#{name},'%' ) and s.state = 0
	</select>
	
	
	<select id="recommendShop" resultType="map">
		select 
			s.id,
			s.goods_name,
			s.goods_describe,
			s.price,
			s.new_price,
			s.describe_img,
			s.is_hot,
			s.type,
		   (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=s.id) as monthlySales   
		from
			shop_goods s
		where 
			s.state = 0 and s.is_recomment=1
	</select>

	<select id="getHotGoods" resultType="map">
		select
			id,
			goods_name,
			type
		from
			shop_goods
		where 
			is_hot = 1 and state = 0		
	</select>
	<select id="getOrderNumberByGoodsId" parameterType="map" resultType="integer">
		select
			sum(quantity)
		from 
			hotel_order 
		where goods_id = #{goodsId} AND pay_state = 1 AND order_state = 3 and 
		((end_date &gt;= #{startDate} AND start_date &lt;= #{endDate} ) OR (start_date &gt;= #{startDate} AND start_date &lt;= #{endDate}))
	</select>
	<select id="getGoodsStock" parameterType="long" resultType="int">
		select
			ifnull(sum(stock),0) as stock
		from
			shop_goods
		where 
			shop_information_id = #{id} and state = 0
	</select>
	<select id="findPackageDetailByPackageId" parameterType="long" resultType="map">
		select
			id,
			goods_name,
			new_price
		from 
			shop_goods
		where
			id = #{packageId}
	</select>
	<select id="findHotelGoodsById" parameterType="long" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.describe_img,
			sg.shop_information_id,
			sg.stock
		from
			shop_goods sg
		where
			sg.shop_information_id = #{id} and sg.state = 0 and sg.type = 1 group by sg.id
	</select>
	
	<select id="findRestaurantGoodsById" parameterType="long" resultType="map">
		select
			sg.id,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.is_hot,
			sg.describe_img,
			sg.shop_information_id,
			sg.stock,
		    (select count(1) from goods_order o where o.create_time>DATE_ADD(curdate(),interval -day(curdate())+1 day) and o.goods_id=sg.id) as monthlySales
		from
			shop_goods sg
		where
			sg.shop_information_id = #{id} and sg.state = 0 and sg.type = 2 group by sg.id
	</select>

    <select id="selectByPrimaryKey" parameterType="Long" resultType="map">
        SELECT
          sg.id,
          sg.goods_name AS goodsName,
		  sg.goods_describe AS goodsDescribe,
		  sg.price,
		  sg.new_price AS newPrice,
		  sg.deliver_fee AS deliverFee,
		  sg.stock,
		  sg.is_recomment AS isRecomment,
		  sg.is_hot AS isHot,
		  sg.state,
		  sg.content_id AS contentId,
		  sg.shop_information_id AS shopInformationId,
		  sg.createtime AS createTime,
		  sg.describe_img AS describeImg,
		  sg.type,
		  sg.label,
		  sg.brand,
		  si.name
		FROM
		  shop_goods sg LEFT JOIN shop_information si ON sg.shop_information_id = si.id
		WHERE
		  sg.id = #{id}
    </select>
    
    <select id="getShopGoodsList" parameterType="map" resultType="map">
        SELECT
          sg.id,
          sg.goods_name AS goodsName,
		  sg.goods_describe AS goodsDescribe,
		  sg.price,
		  sg.new_price AS newPrice,
		  sg.deliver_fee AS deliverFee,
		  sg.stock,
		  sg.is_recomment AS isRecomment,
		  sg.is_hot AS isHot,
		  sg.state,
		  sg.content_id AS contentId,
		  sg.shop_information_id AS shopInformationId,
		  sg.createtime AS createTime,
		  sg.describe_img AS describeImg,
		  sg.type,
          sg.label,
          sg.brand,
		  si.name
		FROM
		  shop_goods sg LEFT JOIN shop_information si ON sg.shop_information_id = si.id
		WHERE 1=1
          <if test="@Ognl@isNotBlank(type)">
              and sg.type = #{type}
          </if>
		  <if test="@Ognl@isNotBlank(goodsName)">
              AND sg.goods_name LIKE CONCAT('%',#{goodsName},'%')
          </if>
        ORDER BY sg.createtime DESC
    </select>
    <select id="getShopGoodsList_count" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM
          shop_goods sg LEFT JOIN shop_information si ON sg.shop_information_id = si.id
        WHERE 1=1
        <if test="@Ognl@isNotBlank(type)">
            and sg.type = #{type}
        </if>
        <if test="@Ognl@isNotBlank(goodsName)">
            AND sg.goods_name LIKE CONCAT('%',#{goodsName},'%')
        </if>
        ORDER BY sg.createtime DESC
    </select>
    
    <insert id="insertSelective" parameterType="com.htkj.cfdScenic.app.model.ShopGoods">
        INSERT INTO shop_goods
         <trim prefix="(" suffix=")" suffixOverrides=",">
             <if test="id != null">
                 id,
             </if>
             <if test="goodsName != null">
                 goods_name,
             </if>
             <if test="goodsDescribe != null">
                 goods_describe,
             </if>
             <if test="price != null">
                 price,
             </if>
             <if test="newPrice != null">
                 new_price,
             </if>
             <if test="deliverFee != null">
                 deliver_fee,
             </if>
             <if test="stock != null">
                 stock,
             </if>
             <if test="isRecomment != null">
                 is_recomment,
             </if>
             <if test="isHot != null">
                 is_hot,
             </if>
             <if test="state != null">
                 state,
             </if>
             <if test="contentId != null">
                 content_id,
             </if>
             <if test="shopInformationId != null">
                 shop_information_id,
             </if>
             <if test="createTime != null">
                 createtime,
             </if>
             <if test="describeImg != null">
                 describe_img,
             </if>
             <if test="type != null">
                 type,
             </if>
             <if test="label != null">
                 label,
             </if>
             <if test="brand != null">
                 brand,
             </if>
         </trim>
         <trim prefix="values (" suffix=")" suffixOverrides=",">
             <if test="id != null">
                 #{id},
             </if>
             <if test="goodsName != null">
                 #{goodsName},
             </if>
             <if test="goodsDescribe != null">
                 #{goodsDescribe},
             </if>
             <if test="price != null">
                 #{price},
             </if>
             <if test="newPrice != null">
                 #{newPrice},
             </if>
             <if test="deliverFee != null">
                 #{deliverFee},
             </if>
             <if test="stock != null">
                 #{stock},
             </if>
             <if test="isRecomment != null">
                 #{isRecomment},
             </if>
             <if test="isHot != null">
                 #{isHot},
             </if>
             <if test="state != null">
                 #{state},
             </if>
             <if test="contentId != null">
                 #{contentId},
             </if>
             <if test="shopInformationId != null">
                 #{shopInformationId},
             </if>
             <if test="createTime != null">
                 #{createTime},
             </if>
             <if test="describeImg != null">
                 #{describeImg},
             </if>
             <if test="type != null">
                 #{type},
             </if>
             <if test="label != null">
                 #{label},
             </if>
             <if test="brand != null">
                 #{brand},
             </if>
         </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.htkj.cfdScenic.app.model.ShopGoods">
        UPDATE shop_goods
          <set>
              <if test="goodsName != null">
                  goods_name = #{goodsName},
              </if>
              <if test="goodsDescribe != null">
                  goods_describe = #{goodsDescribe},
              </if>
              <if test="price != null">
                  price = #{price},
              </if>
              <if test="newPrice != null">
                  new_price = #{newPrice},
              </if>
              <if test="deliverFee != null">
                  deliver_fee = #{deliverFee},
              </if>
              <if test="stock != null">
                  stock = #{stock},
              </if>
              <if test="isRecomment != null">
                  is_recomment = #{isRecomment},
              </if>
              <if test="isHot != null">
                  is_hot = #{isHot},
              </if>
              <if test="state != null">
                  state = #{state},
              </if>
              <if test="contentId != null">
                  content_id = #{contentId},
              </if>
              <if test="shopInformationId != null">
                  shop_information_id = #{shopInformationId},
              </if>
              <if test="createTime != null">
                  createtime = #{createTime},
              </if>
              <if test="describeImg != null">
                  describe_img = #{describeImg},
              </if>
              <if test="type != null">
                  type = #{type},
              </if>
              <if test="label != null">
                  label = #{label},
              </if>
              <if test="brand != null">
                  brand = #{brand},
              </if>
          </set>
        WHERE
          id = #{id}
    </update>

    <delete id="deleteShopGoods" parameterType="Long">
        DELETE FROM shop_goods
         WHERE id = #{id}
    </delete>
    
    <select id="getShopGoodsByIds" parameterType="map" resultType="map">
    	select
    		goods_name,
    		1 as quantity,
    		new_price
    	from 
    		shop_goods
    	where 
    		id in (${ids})
    </select>
    <select id="getShopShopGoodsList" parameterType="map" resultType="map">
        SELECT
          sg.id,
          sg.goods_name AS goodsName,
		  sg.goods_describe AS goodsDescribe,
		  sg.price,
		  sg.new_price AS newPrice,
		  sg.deliver_fee AS deliverFee,
		  sg.stock,
		  sg.is_recomment AS isRecomment,
		  sg.is_hot AS isHot,
		  sg.state,
		  sg.content_id AS contentId,
		  sg.shop_information_id AS shopInformationId,
		  sg.createtime AS createTime,
		  sg.describe_img AS describeImg,
		  sg.type,
          sg.label,
          sg.brand,
		  si.name
		FROM
		  shop_goods sg LEFT JOIN shop_information si ON sg.shop_information_id = si.id left join shop_user user on user.id = si.shop_user_id
		WHERE 1=1 and user.id = #{userId}
          <if test="@Ognl@isNotBlank(type)">
              and sg.type = #{type}
          </if>
		  <if test="@Ognl@isNotBlank(goodsName)">
              AND sg.goods_name LIKE CONCAT('%',#{goodsName},'%')
          </if>
        ORDER BY sg.createtime DESC
    </select>
    <select id="getShopShopGoodsList_count" parameterType="map" resultType="int">
        SELECT COUNT(1)
        FROM
          shop_goods sg LEFT JOIN shop_information si ON sg.shop_information_id = si.id left join shop_user user on user.id = si.shop_user_id
		WHERE 1=1 and user.id = #{userId}
        <if test="@Ognl@isNotBlank(type)">
            and sg.type = #{type}
        </if>
        <if test="@Ognl@isNotBlank(goodsName)">
            AND sg.goods_name LIKE CONCAT('%',#{goodsName},'%')
        </if>
        ORDER BY sg.createtime DESC
    </select>
    
    <select id="searchGoodsByName" parameterType="map" resultType="map">
		select
			sg.id as shopGoodsId,
			sg.goods_name,
			sg.goods_describe,
			sg.price,
			sg.new_price,
			sg.is_hot,
			sg.describe_img,
			IFNULL(sum(go.quantity),0)as quantity
		from
			shop_goods sg left join goods_order go on go.goods_id = sg.id
		where
			sg.shop_information_id = ${siId} and sg.state = 0 and sg.goods_name = #{goodsName} group by sg.id
	</select>
</mapper>