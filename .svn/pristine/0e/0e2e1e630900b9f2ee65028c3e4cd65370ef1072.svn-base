package com.htkj.cfdScenic.app.dao;

import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Repository;

import com.htkj.cfdScenic.app.model.GoodsOrder;
import com.htrj.common.base.BaseDao;
import com.htrj.common.page.Page;
import com.htrj.common.page.PageRequest;

@Repository
public class GoodsOrderDao extends BaseDao<GoodsOrder,Integer>{
	
	/**
	 * 保存购物车订单
	 */
	public void saveGoodsOrder(GoodsOrder goodsOrder){
		getSqlSession().insert(getStatementName("saveGoodsOrder"),goodsOrder);
	}

	public List findGoodsOrderById(Map map) {
		return getSqlSession().selectList(getStatementName("findGoodsOrderById"),map);
	}

	public void updateGoodsOrder(Map map) {
		getSqlSession().update(getStatementName("updateGoodsOrder"),map);
	}

	public void updateUndoGoodsOrder(Long id) {
		getSqlSession().update(getStatementName("updateUndoGoodsOrder"),id);
	}
	
	public void shopOrderChange(Map map) {
		getSqlSession().update(getStatementName("shopOrderChange"),map);
	}
	
	//获取特产订单
	public List<Map<String,Object>> findGoodsOrder(Map map) {
		return getSqlSession().selectList(getStatementName("findGoodsOrder"),map);
	}
	
	//获取特产订单
	public List<Map<String,Object>> findShopGoodsOrder(Map map) {
		return getSqlSession().selectList(getStatementName("findShopGoodsOrder"),map);
	}

	public List<Map<String,Object>> findGoodsOrderDetail(Long orderId) {
		return getSqlSession().selectList(getStatementName("findGoodsOrderDetail"),orderId);
	}

	public void goodsBackMoney(Map map) {
		getSqlSession().update(getStatementName("goodsBackMoney"),map);
	}

	public GoodsOrder getGoodsOrderByOrderId(Long id) {
		return getSqlSession().selectOne(getStatementName("getGoodsOrderByOrderId"),id);
	}

	public void updateGoodsOrderState(Map order) {
		getSqlSession().update(getStatementName("updateGoodsOrderState"),order);
	}

	public List<Map<String, Object>> getPayOrderFinshByOrderCode(Long orderCode) {
		return getSqlSession().selectList(getStatementName("getPayOrderFinshByOrderCode"),orderCode);
	}

	public void deleteGoodsOrder(Long orderCode) {
		getSqlSession().delete(getStatementName("deleteGoodsOrder"),orderCode);
	}

	public void updateGoodsOrderByOrderCode(Long orderCode) {
		getSqlSession().update(getStatementName("updateGoodsOrderByOrderCode"),orderCode);
	}

	public List<Map<String, Object>> informationGoodsOrderDetail(Map paraMap) {
		return getSqlSession().selectList(getStatementName("informationGoodsOrderDetail"),paraMap);
	}

	public void updateGoodsOrderByorderCodeAll(GoodsOrder goodsOrder) {
		getSqlSession().update(getStatementName("updateGoodsOrderByorderCodeAll"),goodsOrder);
	}

	public List<Map<String, Object>> shopFindGoodsOrder(Map paraMap) {
		return getSqlSession().selectList(getStatementName("shopFindGoodsOrder"),paraMap);
	}

	public List<Map<String, Object>> shopFindGoodsOrderDetail(Map para) {
		return getSqlSession().selectList(getStatementName("shopFindGoodsOrderDetail"),para);
	}

	public Long getShopInformation(Long orderCode) {
		return getSqlSession().selectOne(getStatementName("getShopInformation"),orderCode);
	}

	public Map<String, Object> getTodayMoney(Map para) {
		return getSqlSession().selectOne(getStatementName("getTodayMoney"),para);
	}

	public List<Map<String, Object>> findShopGoodsOrderNotIn(Long siId) {
		return getSqlSession().selectList(getStatementName("findShopGoodsOrderNotIn"),siId);
	}

}
