package com.htkj.cfdScenic.app.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.serializer.SerializerFeature;
import com.htkj.cfdScenic.app.model.UserComment;
import com.htkj.cfdScenic.app.model.Visitors;
import com.htkj.cfdScenic.app.service.UserCommentService;
import com.htkj.cfdScenic.app.service.VisitorsService;
import com.htkj.cfdScenic.app.util.ResponseMsg;
import com.htrj.common.base.BaseController;
import com.htrj.common.page.DataGrid;
import com.htrj.common.page.PageCount;
import com.htrj.common.page.PagerForm;

@Controller
@RequestMapping("/visitors")
public class VisitorsController extends BaseController{
	@Autowired
	private VisitorsService visitorsService;
	@Autowired
	private UserCommentService userCommentService;
	
	/**
	 * 景区-景点列表	GET
	 * http://localhost/cfdScenic/visitors/scenicSpotList?rows=6&page=0
	 * 把景区表内的信息返回
	 * id,
	 * head_img(主图),
	 * name(名称),
	 * price(原价),
	 * new_price(折后价),
	 * details(详情)
	 * openDateId(开放时间)
	 * 调用表 visitors
	 */
	@RequestMapping(value="/scenicSpotList",produces="text/html;charset=UTF-8")
	@ResponseBody
	public String scenicSpotListPage(PageCount page){
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		try {
			Map map = new HashMap();
			map.put("page",page.getPage());
			map.put("rows",page.getRows());
			List<Visitors> list = visitorsService.scenicSpotLimitPage(map);
			if(list.size() > 0 && list.get(0) != null){
				msg.setData(list);
			}else{
				msg.setData(new ArrayList());
			}
			msg.setHearder(0, "success");
		} catch (Exception e) {
			msg.setHearder(1, "error");
		}
		json = JSONObject.toJSONString(msg,SerializerFeature.WriteMapNullValue);
		System.out.println(json);
		return json;
	}
	
	
	/*
	 * 景区-景点主面(主页)
	 * GET
	 * http://localhost:8080/cfdScenic/visitors/scenicSpotParticulars
	 * 根据景区ID把景区的详情信息返回id,headImg(主图),name(名称),price(原价),new_price(折后价),details(详情)openDateId(开放时间)
	 * 调用表 visitors
	 */
	@RequestMapping(value="/scenicSpotParticulars",produces="text/html;charset=UTF-8")
	@ResponseBody
	public String scenicSpotParticulars(Long id){
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		Map<String, String> content = new HashMap<String, String>();
		try {
			content = visitorsService.scenicSpotParticulars(id);
			msg.setHearder(0, "success");
			msg.setData(content);
		} catch (Exception e) {
			msg.setHearder(1, "error");
		}
		json = JSONObject.toJSONString(msg,SerializerFeature.WriteMapNullValue);
		System.out.println(json);
		return json;
	}
	
	/*
	 * 景区-景点评论
	 * GET
	 * http://localhost:8080/cfdScenic/visitors/scenicSpotComment
	 * 根据景区ID把景区的评论信息返回
	 		id, 				评论表id
			uc.user_id, 		用户id
			uc.content, 		评论内容
			uc.satisfy_state, 	满意度（1.非常满意 2 满意 3不满意）
			uc.create_time, 	评论时间
			uc.have_img, 		是否有图片
			uc.memo, 			备注
			uc.is_travels, 		是否同步到游乐圈
			cu.nick_name, 		用户昵称
			cu.head_img 		用户头像
	 * 调用表 user_comment  consumer_user
	 */
/*	@RequestMapping(value="/scenicSpotComment",produces="text/html;charset=UTF-8")
	@ResponseBody
	public String scenicSpotComment(Long id,PagerForm pagerForm,PageCount page){
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		//List<Map<String, String>> content = new ArrayList<Map<String, String>>();
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			//content = userCommentService.scenicSpotComment(id);
			map.put("id", id);
			
			List<UserComment> data= userCommentService.scenicComment(id);
			
		//	DataGrid data = userCommentService.scenicSpotComment(pagerForm.getPageRequest(map));
			
			
			
			
			
			List<Map<String,Object>> imgList=new ArrayList();
			List list=data.getRows();
			for(int i=0;i<list.size();i++)
			{
				@SuppressWarnings("unchecked")
				Map<String,Object> tmap=(Map<String,Object>)list.get(i);
				Long temId=Long.parseLong(tmap.get("id").toString());
				List<Map<String,Object>> imgTemList=userCommentService.getCommentImg(temId);
				imgList.addAll(imgTemList);
				
			}
			
			Map<String, Object> mapData = new HashMap<String, Object>();
			mapData.put("comment", data);
			mapData.put("img", imgList);
			
			msg.setHearder(0, "success");
			msg.setData(mapData);
		} catch (Exception e) {
			msg.setHearder(1, "error");
		}
		json = JSONObject.toJSONString(msg,SerializerFeature.WriteMapNullValue);
		System.out.println(json);
		return json;
	}
	
	
	*/
	
	
	
	
	
	

	/*
	 * 景区-景点评论
	 * GET
	 * http://localhost:8080/cfdScenic/visitors/scenicSpotComment
	 * 根据景区ID把景区的评论信息返回
	 		id, 				评论表id
			uc.user_id, 		用户id
			uc.content, 		评论内容
			uc.satisfy_state, 	满意度（1.非常满意 2 满意 3不满意）
			uc.create_time, 	评论时间
			uc.have_img, 		是否有图片
			uc.memo, 			备注
			uc.is_travels, 		是否同步到游乐圈
			cu.nick_name, 		用户昵称
			cu.head_img 		用户头像
	 * 调用表 user_comment  consumer_user
	 */
	@RequestMapping(value="/scenicSpotComment",produces="text/html;charset=UTF-8")
	@ResponseBody
	public String scenicSpotComment(Long id,PageCount page){
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		//List<Map<String, String>> content = new ArrayList<Map<String, String>>();
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			//content = userCommentService.scenicSpotComment(id);
			map.put("id", id);
			map.put("page", page.getPage());
			map.put("rows", page.getRows());
			
			List<UserComment> data= userCommentService.scenicComment(map);
			
		//	DataGrid data = userCommentService.scenicSpotComment(pagerForm.getPageRequest(map));
			
			
			
			
			
			List<Map<String,Object>> imgList=new ArrayList();
		/*	List list=data.getRows();
			for(int i=0;i<list.size();i++)
			{
				@SuppressWarnings("unchecked")
				Map<String,Object> tmap=(Map<String,Object>)list.get(i);
				Long temId=Long.parseLong(tmap.get("id").toString());
				List<Map<String,Object>> imgTemList=userCommentService.getCommentImg(temId);
				imgList.addAll(imgTemList);
				
			}
			*/
			Map<String, Object> mapData = new HashMap<String, Object>();
			mapData.put("comment", data);
			mapData.put("img", imgList);
			
			msg.setHearder(0, "success");
			msg.setData(data);
		} catch (Exception e) {
			msg.setHearder(1, "error");
		}
		json = JSONObject.toJSONString(msg,SerializerFeature.WriteMapNullValue);
		System.out.println(json);
		return json;
	}
	
	
	
	
	
	
	
	
	
	/*
	 * 景区-搜索
	 * GET
	 * http://localhost:8080/cfdScenic/visitors/obscureSelect
	 * 把需要搜索的景区名称传过来name 查找表内的信息返回id,head_img(主图),name(名称),price(原价),new_price(折后价),details(详情)openDateId(开放时间)
	 * 调用表 visitors
	 */
	@RequestMapping(value="/obscureSelect",produces="text/html;charset=UTF-8")
	@ResponseBody
	public String obscureSelect(String name){
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		List<Map<String, String>> list = new ArrayList<Map<String, String>>();
		try {
			list = visitorsService.obscureSelect(name);
			msg.setHearder(0, "success");
			if(list.size()>0&&list.get(0)!=null)
			{
				msg.setData(list);
			}
		} catch (Exception e) {
			msg.setHearder(1, "error");
		}
		json = JSONObject.toJSONString(msg,SerializerFeature.WriteMapNullValue);
		System.out.println(json);
		return json;
	}
	
	
	
	
	
}
