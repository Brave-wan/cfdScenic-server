package com.htkj.cfdScenic.app.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.htkj.cfdScenic.app.util.ResponseMsg;
import com.htrj.common.utils.PropertiesLoader;

@Controller
@RequestMapping("/interFace/payWayInfo")
public class PayWayInfoController {
	public static PropertiesLoader appPropertiesLoader = new PropertiesLoader("wx.properties");
	
	private static final String PAYWAY_APPID = appPropertiesLoader.getProperty("appid");
	private static final String PAYWAY_PARTNERID = appPropertiesLoader.getProperty("partnerid");
	private static final String PAYWAY_PREPAYID = appPropertiesLoader.getProperty("prepayid");
	private static final String PAYWAY_NONCESTR = appPropertiesLoader.getProperty("noncestr");
	private static final String PAYWAY_TIMESTAMP = appPropertiesLoader.getProperty("timestamp");
	private static final String PAYWAY_SIGNTYPE = appPropertiesLoader.getProperty("signType");
	private static final String PAYWAY_PACKAGE = appPropertiesLoader.getProperty("package");
	private static final String PAYWAY_APIKEY = appPropertiesLoader.getProperty("apiKey");
	private static final String PAYWAY_sign = appPropertiesLoader.getProperty("sign");
	
	/**
	 * Title:获取微信支付信息
	 * @author:lishilong
	 * @date:2016年9月29日
	 */
	@RequestMapping(value = "/toWxInfo", produces = "text/html;charset=UTF-8")
	@ResponseBody
	public String toWxInfo(Double balance) {
		ResponseMsg msg = new ResponseMsg();
		String json = new String();
		Map<String, String> map = new HashMap<String, String>();
		try {
			map.put("appid", PAYWAY_APPID);
			map.put("partnerid", PAYWAY_PARTNERID);
			map.put("prepayid", PAYWAY_PREPAYID);
			map.put("noncestr", PAYWAY_NONCESTR);
			map.put("timestamp", PAYWAY_TIMESTAMP);
			map.put("signType", PAYWAY_SIGNTYPE);
			map.put("package", PAYWAY_PACKAGE);
			map.put("apiKey", PAYWAY_APIKEY);
			map.put("sign", PAYWAY_sign);
			map.put("balance",balance+"");
			msg.setData(map);
			msg.setHearder(0, "ok");
		} catch (Exception e) {
			msg.setHearder(1, "error");
			e.printStackTrace();
		}
		json = JSONObject.toJSONString(msg);
		return json;
	}

}
